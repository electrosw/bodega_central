{"remainingRequest":"/srv/repos/bodega_central/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/srv/repos/bodega_central/frontend/src/components/bodega/Ingreso.vue?vue&type=template&id=354b9f1e&","dependencies":[{"path":"/srv/repos/bodega_central/frontend/src/components/bodega/Ingreso.vue","mtime":1724964842794},{"path":"/srv/repos/bodega_central/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1676473588660},{"path":"/srv/repos/bodega_central/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1676473588036},{"path":"/srv/repos/bodega_central/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1676473588660},{"path":"/srv/repos/bodega_central/frontend/node_modules/vue-loader/lib/index.js","mtime":1676473588036}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}